View(output)
View(fdata)
df <- left_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand")) %>%
group_by(RGN09CD)
summarise(df,n=n())
output <- phe_dsr(df,Dths, Population, stdpop = rep(esp2013[1:15],3))
View(output)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT Period, OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
ORDER BY Period, OfficialCode, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT xYEAR as Period, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
GROUP BY xYEAR, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY xYear, RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- left_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand")) %>%
group_by(RGN09CD)
output <- phe_dsr(df,Dths, Population, stdpop = rep(esp2013[1:15],3))
View(output)
fdata <- fingertips_data(IndicatorID = 108,AreaTypeID = c(101,6)) %>%
filter(Timeperiod == "2014 - 16", AreaType %in% c("Region")) %>%
select(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit) %>%
# mutate(Valuenote = replace(as.character(Valuenote), which(is.na(Valuenote)), "No note"),
#         Timeperiod = as.character(Timeperiod),
#         AreaCode = as.character(AreaCode),
#         AreaName = as.character(AreaName),
#         Sex = as.character(Sex),
#         Age = as.character(Age)) %>%
arrange(Timeperiod, AreaCode, Sex) %>%
distinct(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit)
fdataP <- filter(fdata, Sex="Persons")
fdataP <- filter(fdata, Sex=="Persons")
View(fdataP)
output <- phe_dsr(df,Dths, Population, stdpop = rep(esp2013[1:15],3), type="full")
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
ORDER BY Period, OfficialCode, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
GROUP BY xYEAR, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY xYear, RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- left_join(pops,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
group_by(RGN09CD)
output <- phe_dsr(df,Dths, Population, stdpop = rep(esp2013[1:15],3), type="full")
output <- phe_dsr(df,Dths, Population, stdpop = esp2013[1:15], type="full")
View(df)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
ORDER BY Period, OfficialCode, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
GROUP BY RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- left_join(pops,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
group_by(RGN09CD)
output <- phe_dsr(df,Dths, Population, stdpop = esp2013[1:15], type="full")
summarise(df,n=n())
View(pops)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
GROUP BY OfficialCode, QuinaryAgeBandMin
ORDER BY OfficialCode, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
GROUP BY RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
#GROUP BY OfficialCode, QuinaryAgeBandMin
ORDER BY OfficialCode, QuinaryAgeBandMin")
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, SUM(Population)
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
GROUP BY OfficialCode, GeoName, QuinaryAgeBandMin
ORDER BY OfficialCode, QuinaryAgeBandMin")
View(pops)
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
GROUP BY RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY RGN09CD, AgeBand")
View(deaths)
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
AND RGN09CD IS NOT NULL
GROUP BY RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY RGN09CD, AgeBand")
View(deaths)
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- left_join(pops,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
group_by(RGN09CD)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, SUM(Population) as Pop
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND Sex = 4
AND QuinaryAgeBandMin < 75
GROUP BY OfficialCode, GeoName, QuinaryAgeBandMin
ORDER BY OfficialCode, QuinaryAgeBandMin")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- left_join(pops,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
group_by(RGN09CD)
View(df)
output <- phe_dsr(df,Dths, Population, stdpop = esp2013[1:15], type="full")
output <- phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")
View(output)
View(fdataP)
View(fdataP)
fdataP <- filter(fdata, Sex=="Persons")
expect_equal(data.frame(output[1:6]),
data.frame(fdataP[2,7,6,8,9,10]),check.attributes=FALSE, check.names=FALSE))
data.frame(output[1:6])
data.frame(output[1:6]
)
data.frame(fdataP[2,7,6,8,9,10])
fdataP[2,7,6,8,9,10]
fdataP[1:3]
fdataP[2,7,6]
fdataP[[2,7,6,8,9,10]]
fdataP[,[2,7,6,8,9,10]]
select(fdataP,2,7,6,8,9,10)
data.frame(output[1:6])
data.frame(select(fdataP,2,7,6,8,9,10))
expect_equal(data.frame(output[1:6]),
data.frame(select(fdataP,2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE))
expect_equal(data.frame(output[1:6]),
data.frame(select(fdataP,2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
output[1:6]
select(fdataP,2,7,6,8,9,10)
phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]
df <- left_join(pops,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
transmute(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
output <- phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")
View(df)
df <- left_join(pops,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
output <- phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")
expect_equal(data.frame(phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(fdataP,2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
expect_equal(data.frame(phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(fdataP,2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
fdata <- fingertips_data(IndicatorID = 108,AreaTypeID = c(101,6)) %>%
filter(Timeperiod == "2014 - 16", AreaType %in% c("Region")) %>%
select(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit) %>%
arrange(Timeperiod, AreaCode, Sex) %>%
distinct(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM, Sex,
QuinaryAgeBandMin as AgeBand, SUM(Population) as Pop
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND QuinaryAgeBandMin < 75
GROUP BY OfficialCode, GeoName, QuinaryAgeBandMin
ORDER BY OfficialCode, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
AND RGN09CD IS NOT NULL
GROUP BY RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
View(deaths)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT OfficialCode as RGN09CD, GeoName as RGN09NM, Sex,
QuinaryAgeBandMin as AgeBand, SUM(Population) as Pop
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE Period in ('2014','2015','2016')
AND QuinaryAgeBandMin < 75
GROUP BY OfficialCode, GeoName, Sex, QuinaryAgeBandMin
ORDER BY OfficialCode, Sex, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE xYEAR in ('2014','2015','2016')
AND CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END < 75
AND RGN09CD IS NOT NULL
GROUP BY RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY RGN09CD, Sex, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
View(pops)
View(deaths)
deathsM <- filter(deaths, Sex == 1)
popsM <- filter(pops,Sex==1)
dfM <- left_join(popsM,deathsM, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
View(fdata)
# filter male data
deathsM <- filter(deaths, Sex == 1)
popsM <- filter(pops,Sex==1)
# join deaths to pops
dfM <- left_join(popsM,deathsM, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
# execute phe_dsr function
output <- phe_dsr(dfM,Dths, Pop, stdpop = esp2013[1:15], type="full")
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex=="Male"),2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
data.frame(phe_dsr(df,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6])
data.frame(select(filter(fdata,Sex=="Male"),2,7,6,8,9,10))
View(fdata)
View(output)
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(dfM,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex=="Male"),2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
# filter male data
deathsF <- filter(deaths, Sex == 2)
popsF <- filter(pops,Sex==2)
# join deaths to pops
dfF <- left_join(popsF,deathsF, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
# execute phe_dsr function
output <- phe_dsr(dfF,Dths, Pop, stdpop = esp2013[1:15], type="full")
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(dfF,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex=="Female"),2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
View(deaths)
View(pops)
# filter male data
popsP <- filter(pops,Sex==4)
# join deaths to pops
dfP <- left_join(popsP,deaths, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
# execute phe_dsr function
output <- phe_dsr(dfP,Dths, Pop, stdpop = esp2013[1:15], type="full")
View(deaths)
deathsP <- deaths %>%
group_by(RGN09CD, RGN09NM, AgeBand) %>%
summarise(Dths = SUM(Dths))
deathsP <- deaths %>%
group_by(RGN09CD, RGN09NM, AgeBand) %>%
summarise(Dths = sum(Dths))
View(deathsP)
View(pops)
popsP <- pops %>%
filter(Sex %in% (1,2)) %>%
popsP <- pops %>%
filter(Sex %in% c(1,2)) %>%
group_by(RGN09CD, RGN09NM, AgeBand) %>%
summarise(Pop = sum(Pop))
View(popsP)
dfP <- left_join(popsP,deathsP, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
popsP <- pops %>%
filter(Sex %in% c(1,2)) %>%
group_by(RGN09CD, RGN09NM, AgeBand) %>%
summarise(Pop = sum(Pop)) %>%
ungroup()
deathsP <- deaths %>%
group_by(RGN09CD, RGN09NM, AgeBand) %>%
summarise(Dths = sum(Dths)) %>%
ungroup
popsP <- pops %>%
filter(Sex %in% c(1,2)) %>%
group_by(RGN09CD, RGN09NM, AgeBand) %>%
summarise(Pop = sum(Pop)) %>%
ungroup()
# join deaths to pops
dfP <- left_join(popsP,deathsP, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
# execute phe_dsr function
outputP <- phe_dsr(dfP,Dths, Pop, stdpop = esp2013[1:15], type="full")
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(dfP,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex=="Female"),2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(dfP,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex=="Persons"),2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
data.frame(phe_dsr(dfP,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6])
RGN09CD, RGN09NM, AgeBand) %>%
summarise(Dths = sum(Dths))
data.frame(phe_dsr(dfP,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6])
data.frame(select(filter(fdata,Sex=="Persons"),2,7,6,8,9,10))
deathsP2 <- deaths
popsP2 <- pops %>%
filter(Sex %in% c(1,2))
# join deaths to pops
dfP <- left_join(popsP2,deathsP2, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
dfP2 <- left_join(popsP2,deathsP2, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
View(dfP2)
View(deathsP2)
dfP2 <- left_join(popsP2,deathsP2, by = c("RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
View(dfP2)
# execute phe_dsr function
outputP <- phe_dsr(dfP2,Dths, Pop, stdpop = esp2013[1:15], type="full")
# execute phe_dsr function
outputP <- phe_dsr(dfP2,Dths, Pop, stdpop = rep(esp2013[1:15],2), type="full")
data.frame(phe_dsr(dfP2,Dths, Pop, stdpop = rep(esp2013[1:15],2), type="full")[1:6])
data.frame(select(filter(fdata,Sex=="Persons"),2,7,6,8,9,10))
# filter male data
deathsMF <- deaths
popsMF <- pops %>%
filter(Sex %in% c(1,2))
# join deaths to pops
dfMF <- left_join(popsP2,deathsP2, by = c("RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD, Sex)
# execute phe_dsr function
outputP <- phe_dsr(dfMF,Dths, Pop, stdpop = rep(esp2013[1:15],2), type="full")
# filter male data
deathsMF <- deaths
popsMF <- pops %>%
filter(Sex %in% c(1,2))
# join deaths to pops
dfMF <- left_join(popsP2,deathsP2, by = c("RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD, Sex)
# execute phe_dsr function
outputP <- phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")
data.frame(phe_dsr(dfMF,Dths, Pop, stdpop = rep(esp2013[1:15],2), type="full")[1:6])
dfMF <- left_join(popsMF,deathsMF, by = c("RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD, Sex)
# execute phe_dsr function
outputP <- phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")
data.frame(phe_dsr(dfMF,Dths, Pop, stdpop = rep(esp2013[1:15],2), type="full")[1:6])
summarise(dfMF,n=n())
data.frame(phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6])
data.frame(select(filter(fdata,Sex %in% c("Males","Females"),2,7,6,8,9,10))
)
View(fdata)
data.frame(select(filter(fdata,Sex != "Persons"),2,7,6,8,9,10))
data.frame(phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6])
data.frame(select(filter(fdata,Sex != "Persons"),2,4,7,6,8,9,10))
fdata <- fingertips_data(IndicatorID = 108,AreaTypeID = c(101,6)) %>%
filter(Timeperiod == "2014 - 16", AreaType %in% c("Region")) %>%
mutate(Sex = if_else(Sex=="Male",1,if_else(Sex=="Female",2,4)))
select(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit) %>%
arrange(Timeperiod, AreaCode, Sex) %>%
distinct(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit)
fdata <- fingertips_data(IndicatorID = 108,AreaTypeID = c(101,6)) %>%
filter(Timeperiod == "2014 - 16", AreaType %in% c("Region")) %>%
mutate(Sex = if_else(Sex=="Male",1,if_else(Sex=="Female",2,4))) %>%
select(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit) %>%
arrange(Timeperiod, AreaCode, Sex) %>%
distinct(Timeperiod, AreaCode, AreaName, Sex, Age, Denominator,
Count, Value, LowerCI95.0limit, UpperCI95.0limit)
View(fdata)
deathsMF <- deaths
popsMF <- pops %>%
filter(Sex %in% c(1,2))
# join deaths to pops
dfMF <- left_join(popsMF,deathsMF, by = c("RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD, Sex)
# execute phe_dsr function
outputP <- phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex != 4),2,4,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
data.frame(phe_dsr(dfMF,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6])
data.frame(select(filter(fdata,Sex != 4),2,4,7,6,8,9,10))
str(dfF)
head(dfM)
library(knitr)
## Global options
opts_chunk$set(echo=TRUE,
cache=FALSE,
comment = "#>"
)
#Attach packages
library(PHEstatmethods)
library(testthat)
library(fingertipsR)
library(phecharts)
library(RODBC)
library(dplyr)
# filter male data
deathsM <- filter(deaths, Sex == 1)
popsM <- filter(pops,Sex==1)
# join deaths to pops
dfM <- left_join(popsM,deathsM, by = c("RGN09CD","RGN09NM","AgeBand")) %>%
mutate(RGN09CD = as.character(RGN09CD)) %>%
group_by(RGN09CD)
# execute phe_dsr function
outputM <- phe_dsr(dfM,Dths, Pop, stdpop = esp2013[1:15], type="full")
# compare to fingertips data for males
expect_equal(data.frame(phe_dsr(dfM,Dths, Pop, stdpop = esp2013[1:15], type="full")[1:6]),
data.frame(select(filter(fdata,Sex==1),2,7,6,8,9,10)),check.attributes=FALSE, check.names=FALSE)
x <- covr::package_coverage()
covr::zero_coverage(x)
