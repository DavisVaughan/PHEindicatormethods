select(1:3,5:7,4,8)
names(phe_isr) <- c("row label", "observed", "expected", "isr",
paste("lower",conf.level*100,"cl",sep=""),
paste("upper",conf.level*100,"cl",sep=""), "reference rate", "method")
}
return(phe_isr)
}
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
phe_isr(multiareadata$count,
multiareadata$pop,
refdata$refcount,
refdata$refpop,
groupref=multiareadata$area)
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
filter(test_ISR_results,test_ISR_multiarea="ref_0")
filter(test_ISR_results,test_ISR_multiarea=="ref_0")
View(test_ISR_multiarea)
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)
View(test_ISR_results)
filter(test_ISR_results,test_ISR_multiarea$type == "ref_0")
filter(test_ISR_results,test_ISR_results$type == "ref_0")
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)[2:7]
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7)
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7)
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7)
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7)
expect_equal(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area),
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7), check.attributes=FALSE, check.names=FALSE)
expect_equal(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7), check.attributes=FALSE, check.names=FALSE)
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
expect_equal(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7), check.attributes=FALSE, check.names=FALSE)
phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area)[1:6]
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7)
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7), check.attributes=FALSE, check.names=FALSE)
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
ratio = FALSE))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ratio_100000"),2:7),
check.attributes=FALSE, check.names=FALSE, info="test3")
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
ratio = FALSE))[1:6]
select(filter(test_ISR_results,test_ISR_results$type == "ratio_100000")
,2:7)
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
ratio = FALSE))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "rate_100000"),2:7),
check.attributes=FALSE, check.names=FALSE, info="test3")
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
ref_0 = FALSE))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_100"),2:7),
check.attributes=FALSE, check.names=FALSE, info="test2")
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
conf.level = 0.998))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:5,8:9),
check.attributes=FALSE, check.names=FALSE, info="test4")
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
conf.level = 0.998))[1:6]
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:5,8:9)
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults", col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata", col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:7),
check.attributes=FALSE, check.names=FALSE, info="test5")
expect_equal(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_multiarea$area,
conf.level = 0.998))[1:6],
select(filter(test_ISR_results,test_ISR_results$type == "ref_0"),2:5,8:9),
check.attributes=FALSE, check.names=FALSE, info="test4")
test_ISR_err1 <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err1", col_names=TRUE)
test_ISR_err2 <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err2", col_names=TRUE)
test_ISR_err3 <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err3", col_names=TRUE)
expect_error(data.frame(phe_isr(test_DSR_err1$count,
test_DSR_err1$pop,
stdpop = esp2013,
groupref=test_DSR_err1$area)),
"numerators must all be greater than or equal to zero",info="error test 1")
expect_error(data.frame(phe_isr(test_ISR_err1$count,
test_ISR_err1$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_err1$area))[1:6],
"numerators must all be greater than or equal to zero",
check.attributes=FALSE, check.names=FALSE, info="error test1")
View(test_DSR_err1)
phe_isr <- function(x,n,x_ref, n_ref, groupref = "No Grouping", conf.level = 0.95,
ratio = TRUE, ref_0 = TRUE, multiplier = 100000) {
# validate arguments
if (any(x < 0)) {
stop("numerators must all be greater than or equal to zero")
} else if (any(n <= 0)) {
stop("denominators must all be greater than zero")
} else if (any(x_ref < 0)) {
stop("reference numerators must all be greater than or equal to zero")
} else if (any(n_ref <= 0)) {
stop("reference denominators must all be greater than zero")
} else if ((conf.level<0.9) | (conf.level >1 & conf.level <90)|(conf.level > 100)) {
stop("confidence level must be between 90 and 100 or between 0.9 and 1")
} else if (length(x) != length(n)) {
stop("numerator and denominator vectors must be of equal length")
} else if (length(x_ref) != length(n_ref)) {
stop("reference numerator and reference denominator vectors must be of equal length")
} else if (length(x) %% length(x_ref) !=0) {
stop("numerator vector length must be a multiple of the reference numerator vector length")
}
# scale confidence level
if (conf.level >= 90) {
conf.level <- conf.level/100
}
# loop for ratios
if (ratio==TRUE) {
#set multiplier
multiplier <- 1
if (ref_0 == FALSE) {
multiplier <- 100
}
# calculate ISR and CIS to output as ratio
phe_isr <- data.frame(x,n,x_ref,n_ref,groupref) %>%
mutate(exp_x = x_ref/n_ref * n) %>%
group_by(groupref) %>%
summarise(obs  = sum(x),
exp  = sum(exp_x),
isr  = obs / exp * multiplier) %>%
mutate(lowercl = if_else(obs<10, qchisq((1-conf.level)/2,2*obs)/2/exp*multiplier,
byars_lower(obs,conf.level)/exp*multiplier),
uppercl = if_else(obs<10, qchisq(conf.level+(1-conf.level)/2,2*obs+2)/2/exp*multiplier,
byars_upper(obs,conf.level)/exp*multiplier),
method  = if_else(obs<10,"Exact","Byars"))
names(phe_isr) <- c("group", "observed", "expected", "isr",
paste("lower",conf.level*100,"cl",sep=""),
paste("upper",conf.level*100,"cl",sep=""),"method")
}
# calculate ISR and CIs to output as rate
if (ratio == FALSE) {
phe_isr <- data.frame(x,n,x_ref,n_ref,groupref) %>%
mutate(exp_x = x_ref/n_ref * n) %>%
group_by(groupref) %>%
summarise(obs  = sum(x),
exp  = sum(exp_x),
ref_rate = sum(x_ref) / sum(n_ref) * multiplier) %>%
mutate(isr     = obs / exp * ref_rate,
lowercl = if_else(obs<10, qchisq((1-conf.level)/2,2*obs)/2/exp * ref_rate,
byars_lower(obs,conf.level)/exp * ref_rate),
uppercl = if_else(obs<10, qchisq(conf.level+(1-conf.level)/2,2*obs+2)/2/exp * ref_rate,
byars_upper(obs,conf.level)/exp * ref_rate),
method  = if_else(obs<10,"Exact","Byars")) %>%
select(1:3,5:7,4,8)
names(phe_isr) <- c("row label", "observed", "expected", "isr",
paste("lower",conf.level*100,"cl",sep=""),
paste("upper",conf.level*100,"cl",sep=""), "reference rate", "method")
}
return(phe_isr)
}
expect_error(data.frame(phe_isr(test_ISR_err1$count,
test_ISR_err1$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_err1$area))[1:6],
"numerators must all be greater than or equal to zero",
check.attributes=FALSE, check.names=FALSE, info="error test1")
expect_error(data.frame(phe_isr(test_ISR_err1$count,
test_ISR_err1$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_err1$area))[1:6],
"numerators must all be greater than or equal to zero", info="error test1")
expect_error(data.frame(phe_isr(test_ISR_err2$count,
test_ISR_err2$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_err2$area))[1:6],
"denominators must all be greater than zero", info="error test1")
View(test_ISR_err3)
expect_error(data.frame(phe_isr(test_ISR_err3$count,
test_ISR_err3$pop,
refdata$refcount,
refdata$refpop,
groupref=test_ISR_err3$area))[1:6],
"denominators must all be greater than zero", info="error test1")
refdata$refcount
test_ISR_err1$count
View(test_ISR_err1)
filter(test_ISR_err1$count,test_ISR_err1$area == "testdata_big")
View(test_DSR_err1)
View(test_ISR_err1)
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),[3],
refdata$refpop,
groupref=test_ISR_err3$area))[1:6]
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),[3])
filter(test_ISR_err1,test_ISR_err1$area == "testdata_big")
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),[3])
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),3)
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),3),
refdata$refpop,
groupref=test_ISR_err3$area))[1:6]
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),3),
refdata$refpop,
groupref=test_ISR_err3$area))[1:6],
"reference numerators must all be greater than or equal to zero", info="error test4")
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$count,
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6],
"reference denominators must all be greater than zero", info="error test4")
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
refdata$refcount,
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6],
"reference denominators must all be greater than zero", info="error test4")
library(testthat)
library(dplyr)
library(binom)
library(devtools)
devtools::use_testthat
devtools::test()
library(readxl)
devtools::test()
test_DSR_multiarea <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
rm(list=ls())
# This file loads all testdata used by the testthat scripts into R/sysdata
# Proportions
test_Prop_1   <- read_excel(".\\tests\\testthat\\testdata_Proportion.xlsx", sheet="testdata_Prop_1",   col_names=TRUE)
test_Prop_100 <- read_excel(".\\tests\\testthat\\testdata_Proportion.xlsx", sheet="testdata_Prop_100", col_names=TRUE)
test_Prop_1$Area   <- as.factor(test_Prop_1$Area)
test_Prop_100$Area <- as.factor(test_Prop_100$Area)
#Rates
test_Rate_100000 <- read_excel(".\\tests\\testthat\\testdata_Rate.xlsx", sheet="testdata_Rate_100000", col_names=TRUE)
test_Rate_100    <- read_excel(".\\tests\\testthat\\testdata_Rate.xlsx", sheet="testdata_Rate_100",    col_names=TRUE)
test_Rate_100$Area      <- as.factor(test_Rate_100$Area)
test_Rate_100000$Area   <- as.factor(test_Rate_100000$Area)
# DSRs
test_DSR_multiarea <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_DSR_1976      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_1976",      col_names=TRUE)
test_DSR_err1      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_err1",      col_names=TRUE)
test_DSR_err2      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_err2",      col_names=TRUE)
test_DSR_err3      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_err3",      col_names=TRUE)
test_DSR_results   <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testresults",        col_names=TRUE)
test_DSR_results$group <- as.factor(test_DSR_results$group)
# ISRs
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_err1      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err1",      col_names=TRUE)
test_ISR_err2      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err2",      col_names=TRUE)
test_ISR_err3      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err3",      col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults",        col_names=TRUE)
refdata            <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata",            col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
devtools::test()
devtools::use_data(test_Prop_1, test_Prop_100, internal = TRUE)
devtools::use_data(test_Rate_100, test_rate_100000, internal = TRUE)
devtools::use_data(test_DSR_multiarea, test_DSR_1976, test_DSR_err1, test_DSR_err2,
test_DSR_err3, test_DSR_results, internal = TRUE)
devtools::use_data(test_DSR_multiarea, test_DSR_1976, test_DSR_err1, test_DSR_err2, test_DSR_err3, test_DSR_results, internal = TRUE)
devtools::use_data(test_Prop_1, test_Prop_100,
test_Rate_100, test_rate_100000,
test_DSR_multiarea, test_DSR_1976, test_DSR_err1, test_DSR_err2, test_DSR_err3, test_DSR_results,
test_DSR_multiarea, test_DSR_refdata, test_DSR_err1, test_DSR_err2, test_DSR_err3, test_DSR_results,
internal = TRUE, overwrite = TRUE)
devtools::use_data(test_Prop_1, test_Prop_100,
test_Rate_100, test_Rate_100000,
test_DSR_multiarea, test_DSR_1976, test_DSR_err1, test_DSR_err2, test_DSR_err3, test_DSR_results,
test_ISR_multiarea, test_ISR_refdata, test_ISR_err1, test_ISR_err2, test_ISR_err3, test_ISR_results,
internal = TRUE, overwrite = TRUE)
rm(list=ls())
test_Prop_1   <- read_excel(".\\tests\\testthat\\testdata_Proportion.xlsx", sheet="testdata_Prop_1",   col_names=TRUE)
test_Prop_100 <- read_excel(".\\tests\\testthat\\testdata_Proportion.xlsx", sheet="testdata_Prop_100", col_names=TRUE)
test_Prop_1$Area   <- as.factor(test_Prop_1$Area)
test_Prop_100$Area <- as.factor(test_Prop_100$Area)
#Rates
test_Rate_100000 <- read_excel(".\\tests\\testthat\\testdata_Rate.xlsx", sheet="testdata_Rate_100000", col_names=TRUE)
test_Rate_100    <- read_excel(".\\tests\\testthat\\testdata_Rate.xlsx", sheet="testdata_Rate_100",    col_names=TRUE)
test_Rate_100$Area      <- as.factor(test_Rate_100$Area)
test_Rate_100000$Area   <- as.factor(test_Rate_100000$Area)
# DSRs
test_DSR_multiarea <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_DSR_1976      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_1976",      col_names=TRUE)
test_DSR_err1      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_err1",      col_names=TRUE)
test_DSR_err2      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_err2",      col_names=TRUE)
test_DSR_err3      <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testdata_err3",      col_names=TRUE)
test_DSR_results   <- read_excel(".\\tests\\testthat\\testdata_DSR.xlsx", sheet="testresults",        col_names=TRUE)
test_DSR_results$group <- as.factor(test_DSR_results$group)
# ISRs
test_ISR_multiarea <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_multiarea", col_names=TRUE)
test_ISR_err1      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err1",      col_names=TRUE)
test_ISR_err2      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err2",      col_names=TRUE)
test_ISR_err3      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err3",      col_names=TRUE)
test_ISR_results   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testresults",        col_names=TRUE)
test_ISR_refdata   <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="refdata",            col_names=TRUE)
test_ISR_results$group <- as.factor(test_ISR_results$group)
devtools::use_data(test_Prop_1, test_Prop_100,
test_Rate_100, test_Rate_100000,
test_DSR_multiarea, test_DSR_1976, test_DSR_err1, test_DSR_err2, test_DSR_err3, test_DSR_results,
test_ISR_multiarea, test_ISR_refdata, test_ISR_err1, test_ISR_err2, test_ISR_err3, test_ISR_results,
internal = TRUE, overwrite = TRUE)
devtools::test()
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6]
select(filter(test_ISR_err1,test_ISR_err1$area == "testdata_big"),4)
View(test_ISR_err1)
View(test_ISR_err2)
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_err1,test_ISR_err2$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6]
select(filter(test_ISR_err1,test_ISR_err2$area == "testdata_big"),4)
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_err2,test_ISR_err2$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6]
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_err2,test_ISR_err2$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6],
"reference denominators must all be greater than zero", info="error test5")
View(test_ISR_err3)
View(test_ISR_err2)
test_ISR_err3      <- read_excel(".\\tests\\testthat\\testdata_ISR.xlsx", sheet="testdata_err3",      col_names=TRUE)
devtools::use_data(test_Prop_1, test_Prop_100,
test_Rate_100, test_Rate_100000,
test_DSR_multiarea, test_DSR_1976, test_DSR_err1, test_DSR_err2, test_DSR_err3, test_DSR_results,
test_ISR_multiarea, test_ISR_refdata, test_ISR_err1, test_ISR_err2, test_ISR_err3, test_ISR_results,
internal = TRUE, overwrite = TRUE)
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_err3,test_ISR_err3$area == "testdata_big"),4),
groupref=test_ISR_err3$area))[1:6],
"reference denominators must all be greater than zero", info="error test5")
expect_error(data.frame(phe_isr(test_ISR_err1$count,
test_ISR_err1$pop,
test_ISR_refdata$refcount,
test_ISR_refdata$refpop,
groupref=test_ISR_err1$area,
conf.level = 0.8))[1:6],
"confidence level must be between 90 and 100 or between 0.9 and 1")
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
test_ISR_refdata$refpop,
groupref=test_ISR_multiarea$area,
conf.level = 0.8))[1:6],
"confidence level must be between 90 and 100 or between 0.9 and 1")
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
test_ISR_refdata$refpop,
groupref=test_ISR_multiarea$area,
conf.level = 1.5))[1:6],
"confidence level must be between 90 and 100 or between 0.9 and 1", info="error test8")
data.frame(phe_isr(select(filter(test_ISR_multiarea,test_ISR_multiarea$area == "testdata_big"),count),
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
test_ISR_refdata$refpop,
groupref=test_ISR_multiarea$area))[1:6]
expect_error(data.frame(phe_isr(select(filter(test_ISR_multiarea,test_ISR_multiarea$area == "testdata_big"),count),
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
test_ISR_refdata$refpop,
groupref=test_ISR_multiarea$area))[1:6],
"numerator and denominator vectors must be of equal length", info="error test9")
View(test_ISR_refdata)
select(filter(test_ISR_refdata,test_ISR_refdata$refcount > 3000),refpop)
data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_refdata,test_ISR_refdata$refcount > 3000),refpop),
groupref=test_ISR_multiarea$area))[1:6]
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
test_ISR_refdata$refcount,
select(filter(test_ISR_refdata,test_ISR_refdata$refcount > 3000),refpop),
groupref=test_ISR_multiarea$area)),
"reference numerator and reference denominator vectors must be of equal length", info="error test10")
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
select(filter(test_ISR_refdata,test_ISR_refdata$refcount > 3000),refpop),
test_ISR_refdata$refpop,
groupref=test_ISR_multiarea$area)),
"numerator vector length must be a multiple of the reference numerator vector length", info="error test11")
expect_error(data.frame(phe_isr(test_ISR_multiarea$count,
test_ISR_multiarea$pop,
select(filter(test_ISR_refdata,test_ISR_refdata$refcount > 3000),refcount),
select(filter(test_ISR_refdata,test_ISR_refdata$refcount > 3000),refpop),
groupref=test_ISR_multiarea$area)),
"numerator vector length must be a multiple of the reference numerator vector length", info="error test11")
test_ISR_multiarea$count
devtools::test()
c(1,2,3,4) * c(1,2,3)
library(rmarkdown)
devtools::use_vignette("DSR-vignette")
?rmarkdown
install.packages("rmarkdown")
install.packages("rmarkdown")
library(PHEstatmethods)
library(rmarkdown)
devtools::use_vignette("DSR-vignette")
