select(pops,6)
rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,95,90),times=18
)
all.equal(select(pops,6),
rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18),
check.attributes=FALSE, check.names=FALSE)
select(pops,6)
as.vector(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18))
as.vector(select(pops,6))
test <- as.vector(select(pops,6))
?as.matrix
test <- as.matrix(select(pops,6))
test
as.matrix(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18))
all.equal(as.vector(select(pops,6)),
as.matrix(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18)),
check.attributes=FALSE, check.names=FALSE)
as.matrix(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18),byrow=TRUE)
all.equal(select(pops,6),
rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18),
check.attributes=FALSE, check.names=FALSE)
all.equal(select(pops,6),
data.frame(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=18)),
check.attributes=FALSE, check.names=FALSE)
View(pops)
pops_NW_2016 <- filter(pops,Period == 2016, GeoName == "North West")
View(pops_NW_2016)
pops_NW_2016   <- filter(pops,Period == 2016, GeoName == "North West", Sex == 1)
deaths_NW_2016 <- filter(deaths, xYEAR == 2016, RGN09NM == "North West", Sex == 1)
View(pops_NW_2016)
View(deaths_NW_2016)
phe_dsr(deaths_NW_2016$dths, pops_NW_2016$Population,esp2013)
str(deaths_NW_2016$dths)
str(deaths_NW_2016)
str(pops_NW_2016)
deaths_NW_2016$dths
View(deaths_NW_2016)
phe_dsr(deaths_NW_2016$Dths, pops_NW_2016$Population,esp2013)
str(pops)
str(esp2013)
View(pops)
?merge
?full_join
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT Period, OfficialCode as RGN09CD, GeoName as RGN09NM,
Sex, SexDesc, QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE OfficialCode in ('E12000001','E12000002','E12000003')
AND Period in ('2014','2015','2016')
AND Sex in (1,2)
ORDER BY Period, OfficialCode, Sex, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT xYEAR as Period, RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE RGN09CD IN ('E12000001','E12000002','E12000003')
AND xYEAR in ('2014','2015','2016')
GROUP BY xYEAR, RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY xYear, RGN09CD, Sex, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","Sex"))
View(df)
View(deaths)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","Sex","AgeBand"))
View(df)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","Sex","AgeBand"))
View(df)
View(df)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(group_ref = paste(Period,"_",RGN09CD,"_"Sex)) %>%
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(group_ref = paste(Period,"_",RGN09CD,"_",Sex)) %>%
select(group_ref,AgeBand, Population, Dths)
View(df)
phe_dsr(df$Dths, df$Population,esp2013)
phe_dsr(df$Dths, df$Population,esp2013, groupref = "group_ref")
phe_dsr(df$Dths, df$Population,esp2013, groupref = df$group_ref)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT Period, OfficialCode as RGN09CD, GeoName as RGN09NM,
Sex, SexDesc, QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE OfficialCode in ('E12000001','E12000002','E12000003')
AND Period in ('2014','2015','2016')
AND Sex in (1,2)
ORDER BY Period, OfficialCode, Sex, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT xYEAR as Period, RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE RGN09CD IN ('E12000001','E12000002','E12000003')
AND xYEAR in ('2014','2015','2016')
GROUP BY xYEAR, RGN09CD, RGN09NM, Sex,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY xYear, RGN09CD, Sex, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","Sex","AgeBand")) %>%
mutate(group_ref = paste(Period,"_",RGN09CD,"_",Sex)) %>%
select(group_ref,AgeBand, Population, Dths)
phe_dsr(df$Dths, df$Population,esp2013, groupref = "group_ref")
View(pops)
View(pops)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(PHEstatmethods)
library(RODBC)
library(dplyr)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT Period, OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE OfficialCode in ('E12000001','E12000002','E12000003')
AND Period in ('2014','2015','2016')
AND Sex = 4
ORDER BY Period, OfficialCode, Sex, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT xYEAR as Period, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE RGN09CD IN ('E12000001','E12000002','E12000003')
AND xYEAR in ('2014','2015','2016')
GROUP BY xYEAR, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY xYear, RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
nrow(pops) == 171
nrow(deaths) == 171
all.equal(select(pops,Period, RGN09CD, AgeBand),
select(deaths,Period, RGN09CD, AgeBand), check.attributes=FALSE, check.names=FALSE)
all.equal(select(pops,4),
data.frame(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=9)),
check.attributes=FALSE, check.names=FALSE)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand")) %>%
mutate(group_ref = paste(Period,"_",RGN09CD)) %>%
select(group_ref,AgeBand, Population, Dths)
phe_dsr(df$Dths, df$Population,esp2013, groupref = df$group_ref)
pops_zero <- filter(pops,Period=2016, RGN09CD='E12000001')
pops_zero <- filter(pops,Period==2016, RGN09CD=='E12000001')
View(pops_zero)
View(deaths)
pops_zero <- filter(pops,Period==2016, RGN09CD=='E12000001') %>%
rename(test_area = RGN09CD)
View(pops_zero)
pops_zero <- data.frame(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
esp/100)
pops_zero <- data.frame(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
esp2013/100)
View(pops_zero)
pops_zero <- data.frame(AbeBand = c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Population = esp2013/100)
View(pops_zero)
View(pops_zero)
deaths_zero <- data.frame(AgeBand = c(0,5,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Dths = c(1,1,1,1,3,3,3,3,10,10,10,10,8,8,8,8))
deaths_zero <- data.frame(AgeBand = c(0,5,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Dths = c(1,1,1,1,3,3,3,3,10,10,10,10,8,8,8,8))
View(deaths_zero)
pops_zero
deaths_zero
phe_dsr(pops_zero$Population,deaths_zero$dths,stdpop=esp2013)
data_zero <- left_join(pops_zero, deaths_zero, by=AgeBand)
pops_zero <- data.frame(AgeBand = c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Population = esp2013/100)
data_zero <- left_join(pops_zero, deaths_zero, by=AgeBand)
View(pops_zero)
View(deaths_zero)
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand")
View(data_zero)
phe_dsr(data_zero$Dths,data_zero$Population,stdpop=esp2013)
data_zero <- left_join(pops_zero, deaths_zero, by=AgeBand) %>%
mutate_each(funs(replace(., which(is.na(.)), 0)))
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate_each(funs(replace(., which(is.na(.)), 0)))
?funs
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate(replace(Dths, which(is.na(.)), 0))
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate(Dths = replace(Dths, which(is.na(.)), 0))
View(deaths_zero)
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand")
View(data_zero)
library(tidyr)
View(data_zero)
test <- mutate(data_zero, Dths = replace_NA(0))
test <- mutate(data_zero, Dths = replace_na(0))
?replace_na
test <- data_zero %>%mutate(data_zero, Dths = replace_na(0))
test <- data_zero %>%
mutate(Dths = replace_na(Dths,0))
test <- data_zero %>%
mutate(Dths = replace_na(list(Dths=0))
)
data_zero <- left_join(pops_zero, deaths_zero, by=AgeBand)
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand")
test <- data_zero %>%
mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
View(test)
phe_dsr(data_zero$Population,data_zero$dths,stdpop=esp2013)
phe_dsr(data_zero$Population,data_zero$Dths,stdpop=esp2013)
View(data_zero)
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
phe_dsr(data_zero$Population,data_zero$Dths,stdpop=esp2013)
phe_dsr(data_zero$Dths,data_zero$Population,stdpop=esp2013)
phe_dsr(df$Dths, df$Population,esp2013, groupref = df$group_ref)
library(PHEstatmethods)
phe_dsr(df$Dths, df$Population,esp2013, groupref = df$group_ref)
phe_dsr(data_zero$Dths,data_zero$Population,stdpop=esp2013)
esp2013
library(PHEstatmethods)
esp2013
knitr::opts_chunk$set(
collapse = TRUE,
error = TRUE,
comment = "#>"
)
pops_zero <- data.frame(AgeBand    = c( 0, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Population = c(30,35,35,35,40,40,45,50,50,50,60,60,70,75,70,60,20,20,15)
deaths_zero <- data.frame(AgeBand = c(0,5,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Dths    = c(1,1, 1, 1, 3, 3, 3, 3,10,10,10,10, 8, 8, 8, 8))
pops_zero <- data.frame(AgeBand    = c( 0, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Population = c(30,35,35,35,40,40,45,50,50,50,60,60,70,75,70,60,20,20,15))
deaths_zero <- data.frame(AgeBand = c(0,5,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Dths    = c(1,1, 1, 1, 3, 3, 3, 3,10,10,10,10, 8, 8, 8, 8))
phe_dsr(pops_zero$Population,deaths_zero$Dths,stdpop=esp2013)
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
library(dplyr)
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand") %>%
mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
phe_dsr(data_zero$Dths,data_zero$Population,stdpop=esp2013)
phe_dsr(data_zero$Dths,data_zero$Population,stdpop=esp2013)
knitr::opts_chunk$set(
collapse = TRUE,
error = TRUE,
comment = "#>"
)
pop_ref <- df %>%
group_by(group_ref) %>%
summarise(Eng_Pop = sum(Population),
Eng_Dths = sum(Dths))
View(pop_ref)
View(df)
pop_ref <- df %>%
group_by(group_ref, AgeBand) %>%
summarise(Eng_Pop = sum(Population),
Eng_Dths = sum(Dths))
ref_data <- df %>%
group_by(group_ref, AgeBand) %>%
summarise(Eng_Pop = sum(Population),
Eng_Dths = sum(Dths))
View(ref_data)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand")) %>%
mutate(group_ref = paste(Period,"_",RGN09CD)) %>%
select(group_ref, Period, AgeBand, Population, Dths)
ref_data <- df %>%
group_by(Period, AgeBand) %>%
summarise(Eng_Pop = sum(Population),
Eng_Dths = sum(Dths))
View(ref_data)
phe_isr(df$Dths, df$Population,ref_data$Deaths, ref_data$Population, groupref = df$group_ref)
phe_isr(df$Dths, df$Population,ref_data$Dths, ref_data$Population, groupref = df$group_ref)
ref_data$Dths
phe_isr(df$Dths, df$Population,ref_data$Eng_Dths, ref_data$Eng_Population, groupref = df$group_ref)
ref_data$Eng_Dths
ref_data$Eng_Population
phe_isr(df$Dths, df$Population,ref_data$Eng_Dths, ref_data$Eng_Pop, groupref = df$group_ref)
phe_isr(df$Dths, df$Population,ref_data$Eng_Dths, ref_data$Eng_Pop, groupref = df$group_ref, ref_0=FALSE)
phe_isr(df$Dths, df$Population,ref_data$Eng_Dths, ref_data$Eng_Pop, groupref = df$group_ref, ratio=FALSE)
phe_isr(df$Dths, df$Population,ref_data$Eng_Dths, ref_data$Eng_Pop, groupref = df$group_ref, conf.level=99.8)
library(PHEstatmethods)
phe_rate(65,100,"Label")
vignette(phe_dsr)
vignette(package="PHEstatmethods")
vignette(DSR-vignette,package="PHEstatmethods")
vignette("DSR-vignette",package="PHEstatmethods")
browseignettes
browsVignettes
browseVignettes
browseVignettes("PHEstatmethods")
browseVignettes(PHEstatmethods)
library(PHEstatmethods)
vignette("DSR-vignette",package="PHEstatmethods")
vignette(package="PHEstatmethods")
library(fingertipsR)
vignette(package="fingertipsR")
library(PHEstatmethods)
vignette(package="PHEstatmethods")
library(fingertipsR)
vignette(package="fingertipsR")
library(phecharts)
if (!require(devtools)) install.packages("devtools")
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods',build_vignettes = TRUE)
if (!require(devtools)) install.packages("devtools")
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods', build_vignettes=TRUE)
library(PHEstatmethods)
library(PHEstatmethods)
browsevignettes(package='PHEstatmethods')
browseVignettes("PHEstatmethods")
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods', build_vignettes=TRUE)
browseVignettes("PHEstatmethods")
browseVignettes("PHEstatmethods")
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods', build_vignettes=TRUE)
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods', build_vignettes=TRUE)
browseVignettes(package="PHEstatmethods")
library(PHEstatmethods)
View(test_DSR_multiarea)
phe_dsr(test_DSR_miltiarea,count,pop,esp2013)
phe_dsr(test_DSR_multiarea,count,pop,esp2013)
df <- test_DSR_multiarea %>%
group_by(area)
library(dplyr)
df <- test_DSR_multiarea %>%
group_by(area)
?phe_dsr
phe_dsr(test_DSR_multiarea,count,pop,esp2013)
phe_dsr(df,count,pop,esp2013)
phe_dsr(df,count,pop,esp2013, full)
phe_dsr(df,count,pop,esp2013, type="full")
phe_dsr <- function(data, x, n, stdpop, type = "combined", conf.level = 0.95, multiplier = 100000) {
if (missing(data)) {
stop("data must contain a data.frame object")
} else if (missing(x)) {
stop("x must contain an unquoted field name from data")
} else if (missing(n)) {
stop("n must contain an unquoted field name from data")
} else if (missing(stdpop)) {
stop("stdpop must contain an unquoted field name from data")
} else if (!(type %in% c("rate", "lower", "upper", "combined", "full"))) {
stop("type must be one of rate, lower, upper, combined or full")
}
x <- enquo(x)
n <- enquo(n)
stdpop <- enquo(stdpop)
# validate arguments
if (any(pull(data, !!x) < 0)) {
stop("numerators must all be greater than or equal to zero")
} else if (any(pull(data, !!n) <= 0)) {
stop("denominators must all be greater than zero")
} else if ((conf.level<0.9)|(conf.level >1 & conf.level <90)|(conf.level > 100)) {
stop("confidence level must be between 90 and 100 or between 0.9 and 1")
} else if (length(pull(data, !!x)) != length(pull(data, !!n))) {
stop("numerator and denominator vectors must be of equal length")
} #else if (length(pull(data, !!x)) %% length(stdpop) !=0) {
#stop("numerator vector length must be a multiple of standard population vector length")
#}
# scale confidence level
if (conf.level >= 90) {
conf.level <- conf.level/100
}
lowercl <- paste0("lower",conf.level*100,"cl")
uppercl <- paste0("upper",conf.level*100,"cl")
# calculate DSR and CIs
phe_dsr <- data %>%
mutate(wt_rate = (!!x) * (!!stdpop) / (!!n),
sq_rate = (!!x) * ((!!stdpop)/(!!n))^2) %>%
summarise(total_count = sum(!!x),
total_pop = sum(!!n),
dsr = sum(wt_rate) / sum((!!stdpop)) * multiplier,
vardsr = 1/sum(!!stdpop)^2 * sum(sq_rate),
!!quo_name(lowercl) := dsr + sqrt((vardsr/sum(!!x)))*(byars_lower(sum(!!x),conf.level)-sum(!!x)) * multiplier,
!!quo_name(uppercl) := dsr + sqrt((vardsr/sum(!!x)))*(byars_upper(sum(!!x),conf.level)-sum(!!x)) * multiplier) %>%
select(-vardsr) %>%
mutate(dsr     = if_else(total_count < 10,-1,dsr),
!!quo_name(lowercl) := if_else(total_count < 10,-1,!!sym(lowercl)),
!!quo_name(uppercl) := if_else(total_count < 10,-1,!!sym(uppercl)),
method  = if_else(total_count < 10,"NA","Dobson"))
if (type == "lower") {
phe_dsr <- phe_dsr %>%
select(-!!sym(uppercl), -dsr, -method, - total_count, -total_pop)
} else if (type == "upper") {
phe_dsr <- phe_dsr %>%
select(-!!sym(lowercl), -dsr, -method, - total_count, -total_pop)
} else if (type == "rate") {
phe_dsr <- phe_dsr %>%
select(-!!sym(lowercl), -!!sym(uppercl), -method, - total_count, -total_pop)
} else if (type == "combined") {
phe_dsr <- phe_dsr %>%
select(-method, - total_count, -total_pop)
}
return(phe_dsr)
}
library(dplyr)
install.packages("rlang")
knitr::opts_chunk$set(
collapse = TRUE,
error = TRUE,
comment = "#>"
)
library(PHEstatmethods)
library(RODBC)
library(dplyr)
library(tidyr)
library(rlang)
dbhandle1 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=z_Populations_DEV;Encrypt=true;trusted_connection=true')
dbhandle2 <- odbcDriverConnect('driver={SQL Server};server=SQLClusColLake\\Lake;
database=BirthsDeaths;Encrypt=true;trusted_connection=true')
pops <- sqlQuery(dbhandle1,"SELECT Period, OfficialCode as RGN09CD, GeoName as RGN09NM,
QuinaryAgeBandMin as AgeBand, Population
FROM [z_Populations_DEV].[dbo].[vRes_RGN09_FiveYear]
WHERE OfficialCode in ('E12000001','E12000002','E12000003')
AND Period in ('2014','2015','2016')
AND Sex = 4
ORDER BY Period, OfficialCode, Sex, QuinaryAgeBandMin")
deaths <- sqlQuery(dbhandle2,"SELECT xYEAR as Period, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END AS AgeBand, COUNT(*) AS Dths
FROM BirthsDeaths.dbo.vDeathsALL d
LEFT JOIN LookupsShared.dbo.vLKP_RGN09 l
ON d.GOR_Resi = l.RGN09CDO
WHERE RGN09CD IN ('E12000001','E12000002','E12000003')
AND xYEAR in ('2014','2015','2016')
GROUP BY xYEAR, RGN09CD, RGN09NM,
CASE WHEN xAge_Year>=90 THEN 90 ELSE FLOOR(CAST(LEFT(xAge_Year,2) AS FLOAT)/5)*5 END
ORDER BY xYear, RGN09CD, AgeBand")
odbcClose(dbhandle1)
odbcClose(dbhandle2)
all.equal(select(pops,4),
data.frame(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=9)),
check.attributes=FALSE, check.names=FALSE)
View(pops)
View(deaths)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand"))
View(df)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand")) %>%
select(group_ref,AgeBand, Population, Dths) %>%
group_by(Period, RGN09CD)
df <- full_join(pops,deaths, by = c("Period","RGN09CD","RGN09NM","AgeBand")) %>%
group_by(Period, RGN09CD)
View(df)
phe_dsr(df, Dths, Population, esp2013)
phe_dsr(df, Dths, population, esp2013, 99.8, 10000)
phe_dsr(df, Dths, population, esp2013, "full", 99.8, 10000)
phe_dsr(df, Dths, Population, esp2013, "full", 99.8, 10000)
pops_zero <- data.frame(AgeBand    = c( 0, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Population = c(30,35,35,35,40,40,45,50,50,50,60,60,70,75,70,60,20,20,15))
pops_zero
deaths_zero <- data.frame(AgeBand = c(0,5,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Dths    = c(1,1, 1, 1, 3, 3, 3, 3,10,10,10,10, 8, 8, 8, 8))
deaths_zero
data_zero <- left_join(pops_zero, deaths_zero, by="AgeBand")
View(data_zero)
phe_dsr(data_zero, Dths, Population,esp2013)
select(pops(4))
select(pops,4)
select(pops,4) / c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90)
esp2013 <- esp2013
View(df)
View(df)
select(df,4)
select(df,1,2,4)
select(df,1,2,4)[3]
all.equal(select(df,1,2,4)[3],
data.frame(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=9)),
check.attributes=FALSE, check.names=FALSE)
all.equal(df[4],
data.frame(rep(c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),times=9)),
check.attributes=FALSE, check.names=FALSE)
df[4]
df[4]/9
knitr::opts_chunk$set(
collapse = TRUE,
error = TRUE,
comment = "#>"
)
pops_nopops <- data.frame(AgeBand    = c( 0, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),
Population = c(30,35,35,35,40,40,45,50,50,50,60,60,70,75,70,60,20,20))
deaths_nopops <- data.frame(AgeBand = c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85),
Dths    = c(1,1, 1, 1, 1, 1, 1, 3, 3, 3, 3,10,10,10,10, 8, 8, 8))
data_nopops <- left_join(pops_nopops, deaths_nopops, by="AgeBand")
require(dplyr)
data_nopops <- left_join(pops_nopops, deaths_nopops, by="AgeBand")
View(data_nopops)
phe_dsr(data_nopops, Dths, Population, esp2013)
View(data_nopops)
data_nopops_1 <- bind_rows(data_nopops, c(90,0,0))
new_row <- c(90,0,0)
data_nopops_1 <- bind_rows(data_nopops, new_row)
View(data_nopops)
new_row <- data.frame(AgeBand=90, Population=0, Dths=0)
data_nopops_1 <- bind_rows(data_nopops, new_row)
View(data_nopops_1)
phe_dsr(data_nopops1, Dths, Population, esp2013)
phe_dsr(data_nopops_1, Dths, Population, esp2013)
pops_nodths   <- data.frame(AgeBand    = c( 0, 5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Population = c(30,35,35,35,40,40,45,50,50,50,60,60,70,75,70,60,20,20,15))
deaths_nodths <- data.frame(AgeBand = c(0,5,25,30,35,40,45,50,55,60,65,70,75,80,85,90),
Dths    = c(1,1, 1, 1, 3, 3, 3, 3,10,10,10,10, 8, 8, 8, 8))
data_nodths <- left_join(pops_nodths, deaths_nodths, by="AgeBand")
data_nodths <- mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
View(deaths_nodths)
View(data_nodths)
data_nodths <- data_nodths %>%
mutate(Dths = replace(Dths, which(is.na(Dths)), 0))
View(data_nodths)
phe_dsr(data_nodths, Dths, Population, esp2013)
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods#Development1')
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods')
devtools::install_git('https://gitlab.phe.gov.uk/Georgina.Anderson/PHEstatmethods', build_vignettes=TRUE)
